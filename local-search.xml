<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ImageEmbedding</title>
    <link href="/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/ImageEmbedding/"/>
    <url>/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/ImageEmbedding/</url>
    
    <content type="html"><![CDATA[<h2 id="本地资源引用问题以图片为例">本地资源引用问题（以图片为例）</h2><h3 id="方法说明">方法说明</h3><h4 id="markdown直接引用借助hexo-renderer-marked渲染器">1.Markdown直接引用借助hexo-renderer-marked渲染器</h4><p><ahref="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked3.1.0</a><a href="#fn1" class="footnote-ref" id="fnref1"role="doc-noteref"><sup>1</sup></a> 渲染器引入了一个新选项，允许在markdown 中嵌入图片而不使用标签插件。需配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">_config.yml</span><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>启用后，使用<code>hexo new post ImageEmbedding</code>创建文章时，会在<code>source/_posts</code>目录下自动生成目录同名目录<code>ImageEmbedding</code>。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less">├── <span class="hljs-selector-tag">source</span><br>|<br>└── <span class="hljs-selector-tag">_posts</span><br>    ├── <span class="hljs-selector-tag">ImageEmbedding</span><span class="hljs-selector-class">.md</span><br>    └── <span class="hljs-selector-tag">ImageEmbedding</span><br>        └── <span class="hljs-selector-tag">image</span><span class="hljs-selector-class">.jpg</span><br><br></code></pre></td></tr></table></figure><p>若<code>image.jpg</code>是帖子<code>ImageEmbedding</code>的资源图像且位于<code>/source/_posts/ImageEmbedding/image.jpg</code>，则可以在<code>name.md</code>文档中采用如下方式直接引用：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">!<span class="hljs-selector-attr">[]</span>(<span class="hljs-selector-tag">image</span><span class="hljs-selector-class">.jpg</span>)<br></code></pre></td></tr></table></figure><figure><img src="image.jpg" alt="markdown引用" /><figcaption aria-hidden="true">markdown引用</figcaption></figure><h4 id="使用html标签引用">2. 使用html标签引用</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://ljxkkk0.github.io/Hexo使用指南/ImageEmbedding/image.jpg&quot;</span> <span class="hljs-attribute">width</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>html引用可改变图片尺寸等，引用更灵活：</p><p><img src="https://ljxkkk0.github.io/Hexo使用指南/ImageEmbedding/image.jpg" alt="html引用" width="100" ></p><h3 id="参考链接">参考链接</h3><section id="footnotes" class="footnotes footnotes-end-of-document"role="doc-endnotes"><hr /><ol><li id="fn1"><p>https://github.com/hexojs/hexo-renderer-marked<ahref="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
    
    
    <categories>
      
      <category>Hexo使用指南</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初始化</title>
    <link href="/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <url>/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo初始化">Hexo初始化</h2><p>安装 Hexo 后，运行以下命令在目标<code>&lt;folder&gt;</code>中初始化Hexo： <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> hexo init &lt;folder&gt;<br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> &lt;folder&gt;<br><span class="hljs-variable">$</span> npm install<br></code></pre></td></tr></table></figure> 初始化之后，项目目录包含以下内容：<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class="hljs-string">|   ├── _drafts</span><br><span class="hljs-string">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure></p><ul><li><strong>_config.yml</strong><br />网站配置文件,可以在这里配置大部分设置，如<code>language</code>、<code>deploy</code>等。<br /></li><li><strong>package.json</strong><br />各种依赖包。 默认安装了 EJS、Stylus 和 Markdown 渲染器。如果需要，可以稍后卸载。</li><li><strong>scaffolds</strong><br />默认框架/布局，创建新文章时，Hexo会将新文件建立在默认框架/布局上，其中包含<code>post</code>、<code>draft</code>、<code>page</code>。</li><li><strong>source</strong><br />源文件夹。 这是放置网站内容的地方。 Hexo会忽略隐藏文件和名称前缀为<code>_</code>（下划线）的文件或文件夹，但<code>_posts</code>文件夹除外。 可渲染文件（如Markdown、HTML）被处理后将放入<code>public</code>目录下，而其他文件将被简单复制。</li><li><strong>themes</strong><br />主题文件夹。Hexo将网站内容与主题相结合，生成一个静态网站。注：Hexo中安装的各theme的源文件存放在<code>node_modules</code>目录下，名称通常为<code>hexo-theme-[themename]</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hexo使用指南</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DVWA靶场</title>
    <link href="/%E7%AC%94%E8%AE%B0/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/DVWA%E9%9D%B6%E5%9C%BA/"/>
    <url>/%E7%AC%94%E8%AE%B0/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/DVWA%E9%9D%B6%E5%9C%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="dvwa靶场学习笔记">DVWA靶场学习笔记</h2><h3 id="一环境配置">一、环境配置</h3><p>该部分主要参考各种帖子</p><ol type="1"><li><p>VirtualBox安装win10虚拟机：</p><ul><li><ahref="http://t.csdnimg.cn/ymk08">win10镜像下载</a><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="http://t.csdnimg.cn/ymk08">[1]</span></a></sup><br /></li><li><ahref="http://t.csdnimg.cn/HdS64">VirtualBox中安装win10虚拟机</a><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="http://t.csdnimg.cn/HdS64">[2]</span></a></sup></li><li>出现的问题：<ul><li>安装时win10虚拟机蓝屏报错：无法获取[ ProductKey]，<ahref="https://www.cnblogs.com/ranzhong/p/18033320">参考</a><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="https://www.cnblogs.com/ranzhong/p/18033320">[3]</span></a></sup><br /></li><li>虚拟机安装virtualbox增强包，针对点击虚拟机头部导航栏中的设备 -&gt;安装增强功能没有反应的情况，<ahref="http://t.csdnimg.cn/eDx0C">参考</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="http://t.csdnimg.cn/eDx0C">[4]</span></a></sup></li></ul></li></ul></li><li><p><ahref="http://t.csdnimg.cn/CHfO3">靶场搭建</a><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="http://t.csdnimg.cn/eDx0C">[4]</span></a></sup></p></li><li><p><ahref="http://t.csdnimg.cn/JqHfM">BurpSuite安装及使用</a><sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="http://t.csdnimg.cn/CHfO3">[5]</span></a></sup></p></li></ol><h3 id="二靶场测试">二、靶场测试</h3><h3 id="小芝士">小芝士</h3><p>终端中命令的执行逻辑：<br />- Windows中：<br />- "|":直接执行后面的语句。例如:<code>ping 127.0.0.1|whoami</code>.<br />-"||":如果前面执行的语句执行出错，则执行后面的语句，前面的语句只能为假。例如:<code>ping 2|whoami</code>.<br />- "&amp;":如果前面的语句为假则直接执行后面的语句，前面的语句可真可假。例如:<code>ping 127.0.0.1&amp;whoami</code>.<br />-"&amp;&amp;":如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句只能为真。例如:<code>ping 127.0.0.1&amp;&amp;whoami</code>.<br />- Linux中：<br />- ";":执行完前面的语句再执行后面的。例如:<code>ping 127.0.0.1;whoami</code>.<br />- "|"：显示后面语句的执行结果。例如:<code>ping 127.0.0.1|whoami</code>.<br />- "||"：当前面的语句执行出错时，执行后面的语句。例如:<code>ping 1||whoami</code>.<br />- "&amp;":如果前面的语句为假则直接执行后面的语句，前面的语句可真可假。例如:<code>ping 127.0.0.1&amp;whoami</code>.<br />- "&amp;&amp;":如果前面的语句为假则直接出错，也不执行后面的，前面的语句只能为真。例如:<code>ping 127.0.0.1&amp;&amp;whoami</code>.</p><h3 id="参考链接">参考链接</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>http://t.csdnimg.cn/ymk08<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>http://t.csdnimg.cn/HdS64<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:3"class="footnote-text"><span>https://www.cnblogs.com/ranzhong/p/18033320<a href="#fnref:3" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>http://t.csdnimg.cn/eDx0C<a href="#fnref:4" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>http://t.csdnimg.cn/CHfO3<a href="#fnref:5" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>http://t.csdnimg.cn/JqHfM<a href="#fnref:6" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>网络攻防技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>-[网络攻防技术，学习笔记]</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用指令</title>
    <link href="/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/">Hexo</a><a href="#fn1"class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>是一款快速、简单且功能强大的博客框架。 您只需用Markdown（或其他标记语言）编写文章，Hexo就会在几秒钟内生成带有精美主题的静态文件。 ## Hexo常用命令</p><p>本文仅记录部分常用命令的信息，详细指令文档见<ahref="https://hexo.io/zh-cn/docs/commands.html">官方文档</a><ahref="#fn2" class="footnote-ref" id="fnref2"role="doc-noteref"><sup>2</sup></a></p><h3 id="init">init</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init [folder]<br></code></pre></td></tr></table></figure><p>新建一个网站。 如果没有设置 folder ，Hexo默认在目前的文件夹建立网站。</p><h3 id="new">new</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><p>新建一篇文章/页面。<strong><code>title</code>是不可缺少的，若<code>new</code>后面只有一个字段，则该字段被认为是<code>title</code>，此时<code>layout</code>默认使用<code>_config.yml</code> 中的 <code>default_layout</code>参数代替。如果<code>title</code>包含空格的话，请使用引号括起来。网页/文章的文件名和<code>title</code>无关联，不一定相同。</strong></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>,<code>--path</code></td><td>文章的路径。 自定义文章的路径。</td></tr><tr><td><code>-r</code>,<code>--replace</code></td><td>如果存在的话，替换当前的文章。</td></tr><tr><td><code>-s</code>,<code>--slug</code></td><td></td></tr></tbody></table><h3 id="clean">clean</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br></code></pre></td></tr></table></figure><p>清除缓存文件（db.json）和已生成的<code>public</code>，通常在写完文章后需要使用以清除之前的缓存。</p><h3 id="generate">generate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate / hexo g<br></code></pre></td></tr></table></figure><p>产生渲染后的文件<code>public</code>，有多个可选项，详见<ahref="https://hexo.io/zh-cn/docs/commands.html">官方文档</a>。</p><h3 id="deploy">deploy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy / hexo d<br></code></pre></td></tr></table></figure><p>根据<code>_config.yml</code>中的配置，将生成的静态网页部署到托管平台/服务器。</p><h3 id="server">server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server / hexo s<br></code></pre></td></tr></table></figure><p>启动本地服务器。 默认情况下，访问网址为：http://localhost:4000/。</p><h3 id="完整流程">完整流程</h3><ol type="1"><li><p>新建文章或页面</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new post [title]<br></code></pre></td></tr></table></figure> 完成对应md文档的编写</p></li><li><p>本地预览：从清除缓存到启动本地服务器</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure></p></li><li><p>部署流程：从清除缓存到部署</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure></p></li></ol><h3 id="参考链接">参考链接</h3><section id="footnotes" class="footnotes footnotes-end-of-document"role="doc-endnotes"><hr /><ol><li id="fn1"><p>https://hexo.io/<a href="#fnref1" class="footnote-back"role="doc-backlink">↩︎</a></p></li><li id="fn2"><p>https://hexo.io/zh-cn/docs/commands.html<ahref="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
    
    
    <categories>
      
      <category>Hexo使用指南</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>配置</title>
    <link href="/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E9%85%8D%E7%BD%AE/"/>
    <url>/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="网站配置">网站配置</h2><p>配置<code>_config.yml_</code>,下面仅对常用配置作介绍，完整配置参考<ahref="https://hexo.io/zh-cn/docs/configuration">官方文档</a><ahref="#fn1" class="footnote-ref" id="fnref1"role="doc-noteref"><sup>1</sup></a></p><h3 id="site">Site</h3><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td><code>title</code></td><td>网站标题</td></tr><tr><td><code>subtitle</code></td><td>副标题</td></tr><tr><td><code>description</code></td><td>描述</td></tr><tr><td><code>keywords</code></td><td>关键词</td></tr><tr><td><code>author</code></td><td>作者</td></tr><tr><td><code>language</code></td><td>语言。使用 2 个字母的 ISO-639-1 代码，或 它的变体。 默认为 en。</td></tr><tr><td><code>timezone</code></td><td>网站时区。 Hexo 默认使用您电脑的时区。 请参考时区列表进行设置，如America/New_York, Japan, 和 UTC 。 一般的，对于中国大陆地区可以使用Asia/Shanghai。</td></tr></tbody></table><h3 id="url">URL</h3><table><thead><tr><th>字段</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>url</code></td><td>网站对应的url，需以<code>http://</code>或是<code>https://</code>开头</td><td></td></tr><tr><td><code>root</code></td><td>网站根目录。 如果您的网站存放在子目录中，例如<code>http://example.com/blog</code> ，则请将您的 <code>url</code> 设为<code>http://example.com/blog</code> 并把 <code>root</code> 设为<code>/blog/</code> 。</td><td></td></tr><tr><td><code>permalink</code></td><td>文章的 永久链接 格式</td><td><code>:year/:month/:day/:title/</code></td></tr><tr><td><code>permalink_defaults</code></td><td>永久链接中各部分的默认值</td><td></td></tr><tr><td><code>pretty_urls</code></td><td>改写 permalink 的值来美化 URL</td><td></td></tr><tr><td><code>pretty_urls.trailing_index</code></td><td>是否在永久链接中保留尾部的 index.html，设置为 false 时去除</td><td><code>true</code></td></tr><tr><td><code>pretty_urls.trailing_html</code></td><td>是否在永久链接中保留尾部的 .html, 设置为 <code>false</code> 时去除(对尾部的 <code>index.html</code>无效</td><td><code>true</code></td></tr></tbody></table><p>示例：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># e.g. page.permalink is http:<span class="hljs-comment">//example.com/foo/bar/index.html  </span></span><br><span class="hljs-symbol">pretty_urls:</span>  <br><span class="hljs-symbol">  trailing_index:</span> false   <br><span class="hljs-meta"># becomes http:<span class="hljs-comment">//example.com/foo/bar/   </span></span><br></code></pre></td></tr></table></figure><h3 id="directory">Directory</h3><table><thead><tr><th>字段</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>source_dir</code></td><td>源文件夹，内容存储位置</td><td><code>source</code></td></tr><tr><td>...</td><td>...</td><td>...</td></tr><tr><td><code>skip_render</code></td><td>匹配到的文件将会被不做改动地复制到<code>public</code>目录中。可使用glob表达式来匹配路径，避免一些不需要渲染的文件被渲染。</td><td></td></tr></tbody></table><p>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">skip_render: &quot;mypage/**/*&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将会直接将 `<span class="hljs-built_in">source</span>/mypage/index.html` 和 `<span class="hljs-built_in">source</span>/mypage/code.js` 不做改动地输出到 <span class="hljs-string">&#x27;public&#x27;</span> 目录</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">你也可以用这种方法来跳过对指定文章文件的渲染</span><br>skip_render: &quot;_posts/test-post.md&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">这将会忽略对 <span class="hljs-string">&#x27;test-post.md&#x27;</span> 的渲染</span><br></code></pre></td></tr></table></figure><h3 id="extension">Extension</h3><table><thead><tr><th>字段名</th><th>描述</th></tr></thead><tbody><tr><td><code>theme</code></td><td>当前主题名称。 值为<code>false</code>时禁用主题</td></tr><tr><td><code>theme_config</code></td><td>主题的配置文件，在这里放置的配置会覆盖主题目录下的<code>_config.yml</code>中的配置</td></tr><tr><td><code>deploy</code></td><td>部署部分的设置</td></tr></tbody></table><h3 id="includeexclude">Include&amp;Exclude</h3><p>使用以下选项可明确处理或忽略某些文件/文件夹。 可以使用 glob表达式进行路径匹配。<br /><code>include</code> 和 <code>exclude</code> 选项只会应用到<code>source/</code> ，而 <code>ignore</code>选项会应用到所有文件夹。</p><p>示例：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 处理或不处理目录或文件<br>include:<br>  - <span class="hljs-string">&quot;.nojekyll&quot;</span><br>  # 处理 <span class="hljs-string">&#x27;source/css/_typing.css&#x27;</span><br>  - <span class="hljs-string">&quot;css/_typing.css&quot;</span><br>  # 处理 <span class="hljs-string">&#x27;source/_css/&#x27;</span> 中的任何文件，但不包括子目录及其其中的文件。<br>  - <span class="hljs-string">&quot;_css/*&quot;</span><br>  # 处理 <span class="hljs-string">&#x27;source/_css/&#x27;</span> 中的任何文件和子目录下的任何文件。<br>  - <span class="hljs-string">&quot;_css/**/*&quot;</span><br><br>exclude:<br>  # 不处理 <span class="hljs-string">&#x27;source/js/test.js&#x27;</span>。<br>  - <span class="hljs-string">&quot;js/test.js&quot;</span><br>  # 不处理 <span class="hljs-string">&#x27;source/js/&#x27;</span> 中的文件、但包括子目录下的所有目录和文件。<br>  - <span class="hljs-string">&quot;js/*&quot;</span><br>  # 不处理 <span class="hljs-string">&#x27;source/js/&#x27;</span> 中的文件和子目录下的任何文件。<br>  - <span class="hljs-string">&quot;js/**/*&quot;</span><br>  # 不处理 <span class="hljs-string">&#x27;source/js/&#x27;</span> 目录下的所有文件名以 <span class="hljs-string">&#x27;test&#x27;</span> 开头的文件，但包括其它文件和子目录下的单文件。<br>  - <span class="hljs-string">&quot;js/test*&quot;</span><br>  # 不处理 <span class="hljs-string">&#x27;source/js/&#x27;</span> 及其子目录中任何以 <span class="hljs-string">&#x27;test&#x27;</span> 开头的文件。<br>  - <span class="hljs-string">&quot;js/**/test*&quot;</span><br>  # 不要用 exclude 来忽略 <span class="hljs-string">&#x27;source/_posts/&#x27;</span> 中的文件。<br>  # 你应该使用 <span class="hljs-string">&#x27;skip_render&#x27;</span>。 或者在要忽略的文件的文件名之前加一个下划线 <span class="hljs-string">&#x27;_&#x27;</span>。<br>  # - <span class="hljs-string">&quot;_posts/hello-world.md&quot;</span> # 在这里配置是没有用的。<br><br>ignore:<br>  # 忽略任何一个名叫 <span class="hljs-string">&#x27;foo&#x27;</span> 的文件夹。<br>  - <span class="hljs-string">&quot;**/foo&quot;</span><br>  # 只忽略 <span class="hljs-string">&#x27;themes/&#x27;</span> 下的 <span class="hljs-string">&#x27;foo&#x27;</span> 文件夹。<br>  - <span class="hljs-string">&quot;**/themes/*/foo&quot;</span><br>  # 对 <span class="hljs-string">&#x27;themes/&#x27;</span> 目录下的每个文件夹中忽略名叫 <span class="hljs-string">&#x27;foo&#x27;</span> 的子文件夹。<br>  - <span class="hljs-string">&quot;**/themes/**/foo&quot;</span><br></code></pre></td></tr></table></figure><h3 id="参考链接">参考链接</h3><section id="footnotes" class="footnotes footnotes-end-of-document"role="doc-endnotes"><hr /><ol><li id="fn1"><p>https://hexo.io/zh-cn/docs/configuration<ahref="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
    
    
    <categories>
      
      <category>Hexo使用指南</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
